
/**
 * 	Generated by mxmlc 2.0
 *
 *	Package:	com.telecoms.media.videowizard.views
 *	Class: 		UploadForm
 *	Source: 	/home/morrisonj/flexworkspace/videoWizardPublish/videoWizardPublish/src/com/telecoms/media/videowizard/views/UploadForm.mxml
 *	Template: 	flex2/compiler/mxml/gen/ClassDef.vm
 *	Time: 		2010.10.04 12:41:44 BST
 */

package com.telecoms.media.videowizard.views
{

import com.telecoms.media.videowizard.control.UploadVideoFilesClass;
import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.HBox;
import mx.containers.Panel;
import mx.controls.Button;
import mx.controls.ComboBox;
import mx.controls.Label;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.events.ListEvent;
import mx.styles.*;




public class UploadForm
	extends com.telecoms.media.videowizard.control.UploadVideoFilesClass
	implements mx.binding.IBindingClient
{

	[Bindable]
/**
 * @private
 **/
	public var SiteFolderSelect : mx.controls.ComboBox;

	[Bindable]
/**
 * @private
 **/
	public var statusText : mx.controls.Label;




private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: com.telecoms.media.videowizard.control.UploadVideoFilesClass
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.Panel
        ,
        stylesFactory: function():void {
          this.headerHeight = 0;
          this.borderStyle = "solid";
          this.horizontalAlign = "right";
          this.verticalAlign = "bottom";
          this.backgroundColor = 16777215;
          this.paddingTop = 10;
          this.paddingRight = 40;
        }
        ,
        propertiesFactory: function():Object { return {
          layout: "vertical",
          width: 590,
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.controls.ComboBox
              ,
              id: "SiteFolderSelect"
              ,
              events: {
                change: "__SiteFolderSelect_change"
              }
              ,
              propertiesFactory: function():Object { return {
                width: 500,
                editable: false,
                dataProvider: [{label: "Choose your Website", folder: "general"}, {label: "IIR Player", folder: "iir"}, {label: "ComWorld", folder: "com_series"}, {label: "DTVE", folder: "dtve_net"}, {label: "LTE Player", folder: "lte"}, {label: "IPTV Player", folder: "iptv"}, {label: "IPTV-News Video Player", folder: "iptvnews"}, {label: "ComWorld Video Player", folder: "com_series"}, {label: "WiMAX Video Player", folder: "wimax"}]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.HBox
              ,
              stylesFactory: function():void {
                this.verticalAlign = "middle";
              }
              ,
              propertiesFactory: function():Object { return {
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Label
                    ,
                    stylesFactory: function():void {
                      this.fontWeight = "bold";
                      this.paddingLeft = 10;
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      text: "Upload Video File to the server"
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Label
                    ,
                    id: "statusText"
                    ,
                    stylesFactory: function():void {
                      this.color = 16711680;
                    }
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    events: {
                      click: "___UploadForm_Button1_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Browse File"
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    events: {
                      click: "___UploadForm_Button2_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      label: "Upload File"
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    /**
     * @private
     **/
	public function UploadForm()
	{
		super();

		mx_internal::_document = this;

		//	our style settings



		//	properties

		//	events

	}

    /**
     * @private
     **/
	override public function initialize():void
	{
 		mx_internal::setDocumentDescriptor(_documentDescriptor_);

		var bindings:Array = _UploadForm_bindingsSetup();
		var watchers:Array = [];

		var target:UploadForm = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_com_telecoms_media_videowizard_views_UploadFormWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					bindings,
					watchers);

		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


		super.initialize();
	}



    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function __SiteFolderSelect_change(event:mx.events.ListEvent):void
{
	uploadFolderSelect = SiteFolderSelect.selectedItem.folder
}

/**
 * @private
 **/
public function ___UploadForm_Button1_click(event:flash.events.MouseEvent):void
{
	uploadFile();
}

/**
 * @private
 **/
public function ___UploadForm_Button2_click(event:flash.events.MouseEvent):void
{
	uploadFileHandler(uploadFolderSelect);
}


	//	binding mgmt
    private function _UploadForm_bindingsSetup():Array
    {
        var result:Array = [];
        var binding:Binding;

        binding = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (_fileStatus.uploadStatus);
                var stringResult:String = (result == undefined ? null : String(result));
                return stringResult;
            },
            function(_sourceFunctionReturnValue:String):void
            {
				
                statusText.text = _sourceFunctionReturnValue;
            },
            "statusText.text");
        result[0] = binding;

        return result;
    }

    private function _UploadForm_bindingExprs():void
    {
        var destination:*;
		[Binding(id='0')]
		destination = (_fileStatus.uploadStatus);
    }

    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil):void
    {
        (UploadForm)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil;




    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

}

}
